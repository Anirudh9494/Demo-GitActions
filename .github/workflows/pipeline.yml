name: build and deploy to sandbox

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CA_CLIENT_ID: ${{secrets.CA_CLIENT_ID}}
      CA_CLIENT_SECRET: ${{secrets.CA_CLIENT_SECRET}}
    
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{runner.os}}-maven-${{hashFiles('**/pom.xml')}}
          restore-keys: |
            ${{runner.os}}-maven-

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'zulu'
      
      - name: Build with Maven
        run: mvn -B package -s .maven/settings.xml
      
      - name: Stamp artifact with commit hash
        run: |
          artifactName1=$(ls target/*.jar | head -1)
          commitHash=$(git rev-parse --short "$GITHUB_SHA")
          artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
          mv $artifactName1 $artifactName2
      
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with: 
          name: artifacts
          path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest 
    env:
      CA_CLIENT_ID: ${{secrets.CA_CLIENT_ID}}
      CA_CLIENT_SECRET: ${{secrets.CA_CLIENT_SECRET}}
    
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: artifacts
      
      - name: Deploy to SANDBOX
        run: |
          artifactName=$(ls artifacts/*.jar | head -1)
          mvn deploy -DmuleDeploy \
          -Dmule.artifact=$artifactName \
          -s .maven/settings.xml \
          -Danypoint.id="$CA_CLIENT_ID" \
          -Danypoint.secret="$CA_CLIENT_SECRET" \
          -DskipTests \
          -DskipDeploymentVerification="true"
