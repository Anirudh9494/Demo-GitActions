name: build-and-deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CA_CLIENT_ID: ${{secrets.CA_CLIENT_ID}}
      CA_CLIENT_SECRET: ${{secrets.CA_CLIENT_SECRET}}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'zulu'
      
      - name: Build with Maven
        run: mvn -B package -s .maven/settings.xml
      
      - name: Stamp artifact with commit hash
        run: |
          artifactName=$(ls target/*.jar | head -1)
          commitHash=$(git rev-parse --short "$GITHUB_SHA")
          timestamp=$(date +%s)
          artifactNameWithHash="$artifactName-$commitHash-$timestamp.jar"
          mkdir -p target  # Create target directory if it doesn't exist
          mv "$artifactName" "target/$artifactNameWithHash"

      - name: Upload artifact to Git repository
        run: |
          git config --local user.email "anirudh.4142@gmail.com"
          git config --local user.name "Anirudh9494"
          git add .
          git commit -m "Add artifact for deployment"
          git remote add origin git@github.com:Anirudh9494/Uploadjar.git
          git push -u origin master

  deploy:
    needs: build
    runs-on: ubuntu-latest 
    env:
      CA_CLIENT_ID: ${{secrets.CA_CLIENT_ID}}
      CA_CLIENT_SECRET: ${{secrets.CA_CLIENT_SECRET}}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifact from Git repository
        run: |
          git pull
          artifactName=$(ls target/*.jar | head -1)
          mv $artifactName target/

      - name: Deploy to SANDBOX
        run: |
          artifactName=$(ls target/*.jar | head -1)
          mvn deploy -DmuleDeploy \
          -Dmule.artifact=$artifactName \
          -s .maven/settings.xml \
          -Danypoint.id="$CA_CLIENT_ID" \
          -Danypoint.secret="$CA_CLIENT_SECRET" \
          -DskipTests \
          -DskipDeploymentVerification="true"
